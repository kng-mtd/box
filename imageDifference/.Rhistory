v=s$v #right singular matrix
u %*% d %*% t(v)
heatmap(as.matrix(tb),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
heatmap(u %*% d %*% t(v),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
tb_svd0=as_tibble(u %*% d %*% t(v))
tbn_svd=tb_svd0 %>%
select(names(tbn))
k=5
ku=k
kv=k
s=svd(tb,ku,kv) #u:n x ku, d:ku x kv, v:m x kv
s
s$d #singular value
d=diag(s$d[1:k])
d
u=s$u #left singular matrix
v=s$v #right singular matrix
u %*% d %*% t(v)
heatmap(as.matrix(tb),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
heatmap(u %*% d %*% t(v),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
tb_svd0=as_tibble(u %*% d %*% t(v))
tbn_svd=tb_svd0 %>%
select(names(tbn))
tb_svd0
names(tb_svd0)=nn
nn
res=nmf(tb,5,.options='t')
plot(res)
w0=basis(res) # W matrix
w=w0
w[w0<0.01]=0
h0=coef(res) # H matrix
h=h0
h[h0<0.01]=0
heatmap(as.matrix(tb),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
w
h
w %*% h
k=5
ku=k
kv=k
s=svd(tb,ku,kv) #u:n x ku, d:ku x kv, v:m x kv
s
s$d #singular value
d=diag(s$d[1:k])
d
u=s$u #left singular matrix
v=s$v #right singular matrix
u %*% d %*% t(v)
v
names(v)
row.names(v)
names(tb0)
names(tb)
row.names(v)=names(tb)
v
u %*% d %*% t(v)
k=5
ku=k
kv=k
s=svd(tb,ku,kv) #u:n x ku, d:ku x kv, v:m x kv
s
s$d #singular value
d=diag(s$d[1:k])
d
u=s$u #left singular matrix
v=s$v #right singular matrix
row.names(v)=names(tb)
u %*% d %*% t(v)
heatmap(as.matrix(tb),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
heatmap(u %*% d %*% t(v),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
tb_svd0=as_tibble(u %*% d %*% t(v))
tbn_svd=tb_svd0 %>%
select(names(tbn))
tbc_svd=tb_svd0 %>%
select(names(tbc))
tbc_svd[tbc_svd<.5]=0
tbc_svd[tbc_svd>.5]=1
tb_svd=bind_cols(tbn_svd,tbc_svd)
heatmap(as.matrix(tb_svd),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
res=nmf(tb,5,.options='t')
plot(res)
w0=basis(res) # W matrix
w=w0
w[w0<0.01]=0
h0=coef(res) # H matrix
h=h0
h[h0<0.01]=0
heatmap(as.matrix(tb),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
heatmap(w%*%h,Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
#tb_res=as_tibble(fitted(res))
tb_sp0=as_tibble(w%*%h)
tbn_sp=tb_sp0 %>%
select(names(tbn))
tbc_sp=tb_sp0 %>%
select(names(tbc))
tbc_sp[tbc_sp<.5]=0
tbc_sp[tbc_sp>.5]=1
tb_sp=bind_cols(tbn_sp,tbc_sp)
heatmap(as.matrix(tb_sp),Rowv=NA,Colv=NA,scale='none',margins=c(10,3))
par(mfrow=c(1,2))
boxplot(tbn)
boxplot(tbn_sp)
par(mfrow=c(2,1))
for(i in names(tbn)){
hist(tb[[i]],main=i,xlim=c(0,1.5))
hist(tb_sp[[i]],main='',xlim=c(0,1.5))
a=cor(tb[i],tb_sp[i])
cat(i,' correlation:',a[[1]],'\n')
t.test(tbn[i],tbn_sp[i]) %>% print()
}
par(mfrow=c(1,2))
corrplot(cor(tb))
corrplot(cor(tb_sp))
for(i in names(tbc)){
cat(i,'\n')
table(tbc[[i]],tbc_sp[[i]]) %>% print()
wilcox.test(tb[[i]],tb1[[i]]) %>% print()
}
for(i in names(tbc)){
cat(i,'\n')
table(tbc[[i]],tbc_sp[[i]]) %>% print()
wilcox.test(tb[[i]],tb_sp[[i]]) %>% print()
}
tb_sp
u
d
k
runif(k*k,0.9,1.1)
d*runif(k*k,0.9,1.1)
runif(k*k,0.9,1.1)
d*runif(k*k,0.9,1.1)
expd=tibble()
for(i in 1:10){
d1=d*runif(k*k,0.95,1.05)
tb1=u %*% d1 %*% t(v)
expd=bind_rows(expd,tb1)
}
d1
u
t(v)
expd=tibble()
for(i in 1:10){
d1=d*runif(k*k,0.95,1.05)
tb1=as_tibbe(u %*% d1 %*% t(v))
expd=bind_rows(expd,tb1)
}
expd=tibble()
for(i in 1:10){
d1=d*runif(k*k,0.95,1.05)
tb1=as_tibble(u %*% d1 %*% t(v))
expd=bind_rows(expd,tb1)
}
expd
glimpse(expd)
tb_svd0
tb_svd
expd0=tibble()
for(i in 1:10){
d1=d*runif(k*k,0.95,1.05)
tb1=as_tibble(u %*% d1 %*% t(v))
expd0=bind_rows(expd0,tb1)
}
expdn=expd0 %>%
select(names(tbn))
expdc=expd0 %>%
select(names(tbc))
expdc[expdc<.5]=0
expdc[expdc>.5]=1
expd=bind_cols(expdn,expdc)
expd
summary(expd)
write_csv(expd,'penguins_expand.csv')
expd=read_csv('penguins_expand.csv')
tb1=sample_n(expd,1000) #sample n=1000
par(mfrow=c(1,2))
boxplot(tbn)
boxplot(tb1 %>% select(names(tbn)))
par(mfrow=c(2,1))
for(i in names(tbn)){
hist(tb[[i]],main=i,xlim=c(0,1.5))
hist(tb1[[i]],main='',xlim=c(0,1.5))
t.test(tb[i],tb1[i]) %>% print()
}
par(mfrow=c(1,2))
corrplot(cor(tb))
corrplot(cor(tb1))
for(i in names(tbc)){
cat(i,'\n')
wilcox.test(tb[[i]],tb1[[i]]) %>% print()
}
#standardize[0,1] of vector,matrix,tibble
std0to1=function(x){
(x-min(x))/(max(x)-min(x))
}
knitr::opts_chunk$set(echo=T,warning=F,message=F)
suppressWarnings(
suppressMessages(
suppressPackageStartupMessages({
library(stats)
library(MASS)
library(tidyverse)
library(magrittr)
library(palmerpenguins)　#サンプルデータ用
library(DT)　#テーブル表示ライブラリ
})
)
)
options(scipen=100,digits=3)
knitr::opts_chunk$set(echo=T,warning=F,message=F)
suppressWarnings(
suppressMessages(
suppressPackageStartupMessages({
library(stats)
library(MASS)
library(tidyverse)
library(magrittr)
library(imager)
})
)
)
options(scipen=100,digits=3)
img0=load.image('image0.jpg')
plot(img0,axes=F)
img=resize(img0,100,100)
plot(img,axes=F) #or plot(as.raster(img))
nrow(img)
ncol(img)
img=grayscale(img) #[0,1]
plot(img,axes=F,main='origin')
mx=as.matrix(img)
chisq.test(mx)
as.vector(mx) |> hist()
dist_matrix=function(mx){
options(digits=3,scipen=100)
par(mfrow=c(2,2))
mmx=mean(mx)
mx[1,1]=0
mx[nrow(mx),ncol(mx)]=1
img=as.cimg(mx)
plot(img,axes=F)
mx[1,1]=mmx
mx[nrow(mx),ncol(mx)]=mmx
cat('sum',sum(mx),'\n')
cat('sd',sd(mx),'\n')
chisq=chisq.test(mx)$statistic
cat('chisq',chisq,'   chisq/sum',chisq/sum(mx),'\n')
cat('rowSums SD',sd(rowSums(mx)),'   colSums SD',sd(colSums(mx)),'\n')
cat('skewness',skew(mx),'   kurtosis',kurt(mx),'\n')
as.vector(mx) |>
hist(breaks=seq(0,1,0.05),xlab='x')
plot(x=rowSums(mx),y=-(1:nrow(mx)),xlab='sum',ylab='row')
plot(x=1:ncol(mx),y=colSums(mx),xlab='col',ylab='sum')
}
dist_image=function(fl){
img=load.image(fl) |>
resize(100,100) |>
grayscale() #[0,1]
mx=as.matrix(img)
mx=std0to1(mx)
dist_matrix(mx)
}
#distribution 0
mx=matrix(0.5,100,100)
suppressWarnings(dist_matrix(mx))
#normal sd=0.1
mx=matrix(rnorm(10000,0.5,0.1),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.05
mx=matrix(runif(10000,0.5-0.05*3**.5,0.5+0.05*3**.5),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.1
mx=matrix(runif(10000,0.5-0.03**.5,0.5+0.03**.5),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.2
mx=matrix(runif(10000,0.5-0.12**.5,0.5+0.12**.5),100,100)
suppressWarnings(dist_matrix(mx))
mx=matrix(rnorm(10000,0.5,0.1),100,100)
mx[21:60,21:60]=0.2
suppressWarnings(dist_matrix(mx))
mx=matrix(rnorm(10000,0.5,0.1),100,100)
mx[11:50,11:50]=0.4
mx[11:40,61:90]=1
mx[71:90,21:40]=0
mx[81:90,81:90]=0.4
mx[56:60,56:60]=0
mx[66:68,66:68]=0
mx[72:73,72:73]=0
mx[77:77,77:77]=0
suppressWarnings(dist_matrix(mx))
dist_image('sea1.jpg')
dist_image('sea2.jpg')
dist_image('forest1.jpg')
dist_image('forest2.jpg')
dist_image('turf1.jpg')
dist_image('turf2.jpg')
dist_image('night1.jpg')
dist_image('night2.jpg')
dist_image('image0.jpg')
dist_image('president.jpg')
layout(matrix(1:1,1,1))
image(mx,axes=F,col=gray.colors(10),
main=str_c('origin  dim: ',nrow(mx),',',ncol(mx)))
k=10
pca=prcomp(mx0)
#plot(img0,axes=F)
img=resize(img0,100,100)
#plot(img,axes=F) #or plot(as.raster(img))
nrow(img)
ncol(img)
img=grayscale(img) #[0,1]
plot(img,axes=F,main='origin')
knitr::opts_chunk$set(echo=T,warning=F,message=F)
suppressWarnings(
suppressMessages(
suppressPackageStartupMessages({
library(stats)
library(MASS)
library(tidyverse)
library(magrittr)
library(imager)
})
)
)
options(scipen=100,digits=3)
mx=as.matrix(img)
chisq.test(mx)
dist_matrix=function(mx){
options(digits=3,scipen=100)
par(mfrow=c(2,2))
mmx=mean(mx)
mx[1,1]=0
mx[nrow(mx),ncol(mx)]=1
img=as.cimg(mx)
plot(img,axes=F)
mx[1,1]=mmx
mx[nrow(mx),ncol(mx)]=mmx
cat('sum',sum(mx),'\n')
cat('sd',sd(mx),'\n')
chisq=chisq.test(mx)$statistic
cat('chisq',chisq,'   chisq/sum',chisq/sum(mx),'\n')
cat('rowSums SD',sd(rowSums(mx)),'   colSums SD',sd(colSums(mx)),'\n')
cat('skewness',skew(mx),'   kurtosis',kurt(mx),'\n')
as.vector(mx) |>
hist(breaks=seq(0,1,0.05),xlab='x')
plot(x=rowSums(mx),y=-(1:nrow(mx)),xlab='sum',ylab='row')
plot(x=1:ncol(mx),y=colSums(mx),xlab='col',ylab='sum')
}
dist_matrix=function(mx){
options(digits=3,scipen=100)
par(mfrow=c(2,2))
mmx=mean(mx)
mx[1,1]=0
mx[nrow(mx),ncol(mx)]=1
img=as.cimg(mx)
plot(img,axes=F)
mx[1,1]=mmx
mx[nrow(mx),ncol(mx)]=mmx
cat('sum',sum(mx),'\n')
cat('sd',sd(mx),'\n')
chisq=chisq.test(mx)$statistic
cat('chisq',chisq,'   chisq/sum',chisq/sum(mx),'\n')
cat('rowSums SD',sd(rowSums(mx)),'   colSums SD',sd(colSums(mx)),'\n')
cat('skewness',skew(mx),'   kurtosis',kurt(mx),'\n')
as.vector(mx) |>
hist(breaks=seq(0,1,0.05),xlab='x')
plot(x=rowSums(mx),y=-(1:nrow(mx)),xlab='sum',ylab='row')
plot(x=1:ncol(mx),y=colSums(mx),xlab='col',ylab='sum')
}
dist_image=function(fl){
img=load.image(fl) |>
resize(100,100) |>
grayscale() #[0,1]
mx=as.matrix(img)
mx=std0to1(mx)
dist_matrix(mx)
}
#distribution 0
mx=matrix(0.5,100,100)
suppressWarnings(dist_matrix(mx))
#normal sd=0.1
mx=matrix(rnorm(10000,0.5,0.1),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.05
mx=matrix(runif(10000,0.5-0.05*3**.5,0.5+0.05*3**.5),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.1
mx=matrix(runif(10000,0.5-0.03**.5,0.5+0.03**.5),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.2
mx=matrix(runif(10000,0.5-0.12**.5,0.5+0.12**.5),100,100)
suppressWarnings(dist_matrix(mx))
mx=matrix(rnorm(10000,0.5,0.1),100,100)
mx[21:60,21:60]=0.2
suppressWarnings(dist_matrix(mx))
mx=matrix(rnorm(10000,0.5,0.1),100,100)
mx[11:50,11:50]=0.4
mx[11:40,61:90]=1
mx[71:90,21:40]=0
mx[81:90,81:90]=0.4
mx[56:60,56:60]=0
mx[66:68,66:68]=0
mx[72:73,72:73]=0
mx[77:77,77:77]=0
suppressWarnings(dist_matrix(mx))
dist_image('sea1.jpg')
#distribution 0
mx=matrix(0.5,100,100)
suppressWarnings(dist_matrix(mx))
#normal sd=0.1
mx=matrix(rnorm(10000,0.5,0.1),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.05
mx=matrix(runif(10000,0.5-0.05*3**.5,0.5+0.05*3**.5),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.1
mx=matrix(runif(10000,0.5-0.03**.5,0.5+0.03**.5),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.2
mx=matrix(runif(10000,0.5-0.12**.5,0.5+0.12**.5),100,100)
suppressWarnings(dist_matrix(mx))
mx=matrix(rnorm(10000,0.5,0.1),100,100)
mx[21:60,21:60]=0.2
suppressWarnings(dist_matrix(mx))
mx=matrix(rnorm(10000,0.5,0.1),100,100)
mx[11:50,11:50]=0.4
mx[11:40,61:90]=1
mx[71:90,21:40]=0
mx[81:90,81:90]=0.4
mx[56:60,56:60]=0
mx[66:68,66:68]=0
mx[72:73,72:73]=0
mx[77:77,77:77]=0
suppressWarnings(dist_matrix(mx))
dist_image('sea1.jpg')
dist_image('sea2.jpg')
dist_image('forest1.jpg')
dist_image('forest2.jpg')
dist_image('turf1.jpg')
dist_image('turf2.jpg')
dist_image('night1.jpg')
dist_image('night2.jpg')
dist_image('image0.jpg')
dist_image('president.jpg')
dist_matrix=function(mx){
options(digits=3,scipen=100)
par(mfrow=c(2,2))
mmx=mean(mx)
mx[1,1]=0
mx[nrow(mx),ncol(mx)]=1
img=as.cimg(mx)
plot(img,axes=F)
mx[1,1]=mmx
mx[nrow(mx),ncol(mx)]=mmx
cat('\n')
cat('sum',sum(mx),'\n')
cat('sd',sd(mx),'\n')
chisq=chisq.test(mx)$statistic
cat('chisq',chisq,'   chisq/sum',chisq/sum(mx),'\n')
cat('rowSums SD',sd(rowSums(mx)),'   colSums SD',sd(colSums(mx)),'\n')
cat('skewness',skew(mx),'   kurtosis',kurt(mx),'\n')
as.vector(mx) |>
hist(breaks=seq(0,1,0.05),xlab='x')
plot(x=rowSums(mx),y=-(1:nrow(mx)),xlab='sum',ylab='row')
plot(x=1:ncol(mx),y=colSums(mx),xlab='col',ylab='sum')
}
dist_image=function(fl){
img=load.image(fl) |>
resize(100,100) |>
grayscale() #[0,1]
mx=as.matrix(img)
mx=std0to1(mx)
dist_matrix(mx)
}
#distribution 0
mx=matrix(0.5,100,100)
suppressWarnings(dist_matrix(mx))
#normal sd=0.1
mx=matrix(rnorm(10000,0.5,0.1),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.05
mx=matrix(runif(10000,0.5-0.05*3**.5,0.5+0.05*3**.5),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.1
mx=matrix(runif(10000,0.5-0.03**.5,0.5+0.03**.5),100,100)
suppressWarnings(dist_matrix(mx))
#unif sd=0.2
mx=matrix(runif(10000,0.5-0.12**.5,0.5+0.12**.5),100,100)
suppressWarnings(dist_matrix(mx))
mx=matrix(rnorm(10000,0.5,0.1),100,100)
mx[21:60,21:60]=0.2
suppressWarnings(dist_matrix(mx))
mx=matrix(rnorm(10000,0.5,0.1),100,100)
mx[11:50,11:50]=0.4
mx[11:40,61:90]=1
mx[71:90,21:40]=0
mx[81:90,81:90]=0.4
mx[56:60,56:60]=0
mx[66:68,66:68]=0
mx[72:73,72:73]=0
mx[77:77,77:77]=0
suppressWarnings(dist_matrix(mx))
dist_image('sea1.jpg')
dist_image('sea2.jpg')
dist_image('forest1.jpg')
dist_image('forest2.jpg')
dist_image('turf1.jpg')
dist_image('turf2.jpg')
dist_image('night1.jpg')
dist_image('night2.jpg')
dist_image('image0.jpg')
dist_image('president.jpg')
